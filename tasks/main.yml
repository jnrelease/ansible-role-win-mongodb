---
- name: Check if MongoDB is installed
  win_service:
    name: MongoDB
  register: mongodb_service
  ignore_errors: true

 #path: 'https://fastdl.mongodb.org/windows/mongodb-windows-x86_64-6.0.6-signed.msi'

- name: Install MongoDB
  win_package:
    path: '{{ mongodb_package_url }}'
    state: present
    arguments: /l*v mdbinstall.log /qb ADDLOCAL="ServerService"
  become: true
  become_method: runas
  become_user: SYSTEM
  when: mongodb_service.exists == false

- name: Ensure Chocolatey is installed
      win_shell: |
        if (-Not (Get-Command choco -ErrorAction SilentlyContinue)) {
          Set-ExecutionPolicy Bypass -Scope Process -Force;
          [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072;
          iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'));
        }
      args:
        executable: powershell.exe
      become: yes

- name: Ensure mongosh is installed
      win_chocolatey:
        name: mongosh
        state: present
      become: yes

- name: Ensure MongoDB service is runnings
  win_service:
    name: MongoDB
    state: started
    start_mode: auto

- name: Create MongoDB script file
  win_copy:
    content: |
      db = connect( 'mongodb://localhost:27017/testdb' );
      use {{ db_name }};
      db.createUser({
        user: "{{ db_user }}",
        pwd: "{{ db_password }}",
        roles: [{ role: "readWrite", db: "{{ db_name }}" }]
      });
      db.getUser("{{ db_user }}");
    dest: 'C:\temp\mongo_script.js'

- name: Run MongoDB script with mongosh
      win_shell: |
        $mongoshExe = (Get-Command mongosh).Source
        $scriptPath = "C:\\temp\\mongo_script.js"
        & $mongoshExe $scriptPath
      args:
        executable: powershell.exe
      register: mongo_script_output

- name: Display MongoDB script output
      debug:
        msg: "{{ mongo_script_output.stdout }}"

# - name: Run MongoDB script file
#   win_shell: |
#     $mongoshExe = "{{ mongosh_exe }}"
#     $scriptPath = "C:\temp\mongo_script.js"
#     & $mongoshExe  "$scriptPath"
#   register: db_output

# - name: Remove MongoDB script file
#   win_file:
#     path: 'C:\temp\mongo_script.js'
#     state: absent

# - name: Print output
#   debug:
#     var: db_output
